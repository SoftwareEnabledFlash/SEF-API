"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[917],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=m(n),u=a,f=c["".concat(s,".").concat(u)]||c[u]||p[u]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8473:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:2},s="Definitions and Acronyms",m={unversionedId:"definitions",id:"definitions",title:"Definitions and Acronyms",description:"chap-DefinitionsAcronyms}",source:"@site/docs/definitions.md",sourceDirName:".",slug:"/definitions",permalink:"/SEF-API/definitions",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/SEF-API/"},next:{title:"Design Environment",permalink:"/SEF-API/environment"}},d={},p=[],c={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"chap-DefinitionsAcronyms"},"Definitions and Acronyms"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Terms/Acronyms"),(0,o.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Software-Enabled Flash\u2122\ufe0f (SEF)"),(0,o.kt)("td",{parentName:"tr",align:null},"A flash memory-based storage hardware platform that is driven by software.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SEF Unit"),(0,o.kt)("td",{parentName:"tr",align:null},"A PCIe\xae\ufe0f flash memory storage device. Contains one or more flash memory dies and provides flash memory service functions. The SEF Unit command set consistsof a subset of the NVMe\u2122\ufe0f command setwith extensions.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Flash Translation Layer (FTL)"),(0,o.kt)("td",{parentName:"tr",align:null},"A mapping of Logical Block Addresses (LBA) to flash memory addresses providing a block based API on top of a flash memory API.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Virtual Device (VD)"),(0,o.kt)("td",{parentName:"tr",align:null},"A set of flash memory dies. A Virtual Device occupies one or more flash memory dies and provides oneor more QoS domains and wear leveling service between QoS domains.Flash memory dies can only be assigned to one virtual device; they are nevershared between virtual devices. Virtual devices provide true hardware-based isolation.",(0,o.kt)("em",{parentName:"td"},"Refer to ",(0,o.kt)("a",{parentName:"em",href:"/SEF-API/virtual-devices#chap-VirtualDevice"},"Virtual Devices")," Chapter for more information"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Pseudo Single-Level Cell (pSLC)"),(0,o.kt)("td",{parentName:"tr",align:null},"SEF devices may optionally support programming flash memory as if it's SLC for increased endurance.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"QoS Domain (QD)"),(0,o.kt)("td",{parentName:"tr",align:null},"A logical construct exposed to the host and enumerated as a SEF Unitnode. QoS domains are created within a single virtual device, anddraw super blocks from a common pool within the virtual device. ManyQoS domains may be created within a single virtual device. QoS domainsprovide software-based isolation, impose quotas on capacity, and arecomprised of a set of super blocks within a virtual device. Super blocksare not shared between QoS domains. Read/write commands are issuedto a specific QoS domain.",(0,o.kt)("em",{parentName:"td"},"Refer to ",(0,o.kt)("a",{parentName:"em",href:"/SEF-API/qos-domains#chap-QoSDomain"},"QoS Domains")," Chapter for more information."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Super Block"),(0,o.kt)("td",{parentName:"tr",align:null},"A set of flash memory blocks spanning all of the dies in a virtual device.All flash memory blocks in a super block can be programmed and read in parallel.",(0,o.kt)("em",{parentName:"td"},"Refer to ",(0,o.kt)("a",{parentName:"em",href:"/SEF-API/super-blocks#chap-SuperBlock"},"Super Blocks")," Chapter for more information."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Logical Block Address (LBA)"),(0,o.kt)("td",{parentName:"tr",align:null},"Represents one component of an optional user-visibleaddressing interface implemented by an FTL.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ADU"),(0,o.kt)("td",{parentName:"tr",align:null},"Atomic data unit. A SEF-defined internal representation of abstractstorage that is the minimum read/write quantum (analogous to theblock size of a traditional block device). A SEF Unit may supportmultiple ADU sizes and the ADU size is specified when creating a QoSdomain. The minimum ADU size is 4096 bytes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"User Address"),(0,o.kt)("td",{parentName:"tr",align:null},"Eight bytes of arbitrary metadata that is stored with an ADU. Forblock storage applications, this is typically the LBA. However theSEF Unit makes no assumptions about the format of this data for non-blockstorage applications.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Placement ID"),(0,o.kt)("td",{parentName:"tr",align:null},"A placement ID is used when writing data to a QoS domain.It's used to group data of similar lifetime together.ADUs written with the same placement ID are stored in the same super blocks.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Root Pointer"),(0,o.kt)("td",{parentName:"tr",align:null},"Provides a bootstrapping mechanism to retrieve metadata from a QoSdomain.")))))}u.isMDXComponent=!0}}]);
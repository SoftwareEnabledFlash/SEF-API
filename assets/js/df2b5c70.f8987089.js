"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[7098],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>c});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var d=r.createContext({}),o=function(t){var e=r.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=o(t.components);return r.createElement(d.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,d=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),p=o(a),k=n,c=p["".concat(d,".").concat(k)]||p[k]||u[k]||l;return a?r.createElement(c,i(i({ref:e},m),{},{components:a})):r.createElement(c,i({ref:e},m))}));function c(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=k;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=t,s[p]="string"==typeof t?t:n,i[1]=s;for(var o=2;o<l;o++)i[o]=a[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5515:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var r=a(7462),n=(a(7294),a(3905));const l={},i="Callback Structures",s={unversionedId:"SEF_API/sef-api03",id:"version-1.13/SEF_API/sef-api03",title:"Callback Structures",description:"SEFCommonIOCB",source:"@site/versioned_docs/version-1.13/SEF_API/sef-api03.md",sourceDirName:"SEF_API",slug:"/SEF_API/sef-api03",permalink:"/SEF-API/1.13/SEF_API/sef-api03",draft:!1,tags:[],version:"1.13",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Common Structures",permalink:"/SEF-API/1.13/SEF_API/sef-api02"},next:{title:"Events",permalink:"/SEF-API/1.13/SEF_API/sef-api04"}},d={},o=[{value:"SEFCommonIOCB",id:"struct-SEFCommonIOCB",level:2},{value:"Members of SEFCommonIOCB",id:"members-of-sefcommoniocb",level:4},{value:"SEFWriteWithoutPhysicalAddressIOCB",id:"struct-SEFWriteWithoutPhysicalAddressIOCB",level:2},{value:"Members of SEFWriteWithoutPhysicalAddressIOCB",id:"members-of-sefwritewithoutphysicaladdressiocb",level:4},{value:"SEFReadWithPhysicalAddressIOCB",id:"struct-SEFReadWithPhysicalAddressIOCB",level:2},{value:"Members of SEFReadWithPhysicalAddressIOCB",id:"members-of-sefreadwithphysicaladdressiocb",level:4},{value:"SEFReleaseSuperBlockIOCB",id:"struct-SEFReleaseSuperBlockIOCB",level:2},{value:"Members of SEFReleaseSuperBlockIOCB",id:"members-of-sefreleasesuperblockiocb",level:4},{value:"SEFAllocateSuperBlockIOCB",id:"struct-SEFAllocateSuperBlockIOCB",level:2},{value:"Members of SEFAllocateSuperBlockIOCB",id:"members-of-sefallocatesuperblockiocb",level:4},{value:"SEFCloseSuperBlockIOCB",id:"struct-SEFCloseSuperBlockIOCB",level:2},{value:"Members of SEFCloseSuperBlockIOCB",id:"members-of-sefclosesuperblockiocb",level:4},{value:"SEFNamelessCopyIOCB",id:"struct-SEFNamelessCopyIOCB",level:2},{value:"Members of SEFNamelessCopyIOCB",id:"members-of-sefnamelesscopyiocb",level:4}],m={toc:o},p="wrapper";function u(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"callback-structures"},"Callback Structures"),(0,n.kt)("h2",{id:"struct-SEFCommonIOCB"},"SEFCommonIOCB"),(0,n.kt)("h4",{id:"members-of-sefcommoniocb"},"Members of SEFCommonIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFStatus"},"struct SEFStatus")),(0,n.kt)("td",{parentName:"tr",align:null},"status"),(0,n.kt)("td",{parentName:"tr",align:null},"Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"int16","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"opcode"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"int16","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"flags"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"SEFIOCBFlags")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"int32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"reserved"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Reserved, must be initialized to zero")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"void *"),(0,n.kt)("td",{parentName:"tr",align:null},"param1"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"void(",(0,n.kt)("em",{parentName:"td"},")(struct SEFCommonIOCB "),")"),(0,n.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFWriteWithoutPhysicalAddressIOCB"},"SEFWriteWithoutPhysicalAddressIOCB"),(0,n.kt)("h4",{id:"members-of-sefwritewithoutphysicaladdressiocb"},"Members of SEFWriteWithoutPhysicalAddressIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Address of the super block for this write; -1 for auto-allocate, or can use value from previous super block allocation call")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFUserAddress"},"struct SEFUserAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"userAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Contains LBA information")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress*")),(0,n.kt)("td",{parentName:"tr",align:null},"tentativeAddresses"),(0,n.kt)("td",{parentName:"tr",align:null},"Out"),(0,n.kt)("td",{parentName:"tr",align:null},"List of tentative physical addresses return")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"const void *"),(0,n.kt)("td",{parentName:"tr",align:null},"metadata"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Metadata to write with data; The number of bytes per ADU required is SEFQoSDomainInfo::ADUsize.meta. May be NULL")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"const struct iovec*"),(0,n.kt)("td",{parentName:"tr",align:null},"iov"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"A pointer to the scatter gather list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint16","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"iovcnt"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"The number of elements in the scatter gather list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFPlacementID"},"struct SEFPlacementID")),(0,n.kt)("td",{parentName:"tr",align:null},"placementID"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Only valid if the flashAddress is auto allocated. A value from 0 to numPlacementIds \u2013 1 indicating what logical data group to place this data in")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"numADU"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Length in QoS Domain ADUs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"distanceToEndOfSuperBlock"),(0,n.kt)("td",{parentName:"tr",align:null},"Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Return value in units of ADUs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFWriteOverrides"},"struct SEFWriteOverrides")),(0,n.kt)("td",{parentName:"tr",align:null},"overrides"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes. Must set kSefIoFlagOverride in flags to apply")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFReadWithPhysicalAddressIOCB"},"SEFReadWithPhysicalAddressIOCB"),(0,n.kt)("h4",{id:"members-of-sefreadwithphysicaladdressiocb"},"Members of SEFReadWithPhysicalAddressIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Physical address for the read command; When the QoS Domain ID and block number are 0, the ADU offset is the root pointer index for the flash address to read.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFUserAddress"},"struct SEFUserAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"userAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Contains LBA information")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"const struct iovec*"),(0,n.kt)("td",{parentName:"tr",align:null},"iov"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"A pointer to the scatter gather list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"void *"),(0,n.kt)("td",{parentName:"tr",align:null},"metadata"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Receives ADU metadata; The number of bytes per ADU required is SEFQoSDomainInfo::ADUsize.meta. May be NULL")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"iovOffset"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Starting byte offset into iov array")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"numADU"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of ADUs to be read, maximum is superBlockCapacity")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint16","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"iovcnt"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"The number of elements in the scatter gather list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFReadOverrides"},"struct SEFReadOverrides")),(0,n.kt)("td",{parentName:"tr",align:null},"overrides"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes. Must set kSefIoFlagOverride in flags to apply")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFReleaseSuperBlockIOCB"},"SEFReleaseSuperBlockIOCB"),(0,n.kt)("h4",{id:"members-of-sefreleasesuperblockiocb"},"Members of SEFReleaseSuperBlockIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Address of super block")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFAllocateSuperBlockIOCB"},"SEFAllocateSuperBlockIOCB"),(0,n.kt)("p",null,"IOCB for SEFAllocateSuperBlockAsync()"),(0,n.kt)("h4",{id:"members-of-sefallocatesuperblockiocb"},"Members of SEFAllocateSuperBlockIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Address of super block")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFAllocateOverrides"},"struct SEFAllocateOverrides")),(0,n.kt)("td",{parentName:"tr",align:null},"overrides"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes. Must set kSefIoFlagOverride in flags to apply")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api05#enum-SEFSuperBlockType"},"enum SEFSuperBlockType")),(0,n.kt)("td",{parentName:"tr",align:null},"type"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"kForWrite or kForPSLCWrite")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFCloseSuperBlockIOCB"},"SEFCloseSuperBlockIOCB"),(0,n.kt)("p",null,"IOCB for SEFCloseSuperBlockAsync()"),(0,n.kt)("h4",{id:"members-of-sefclosesuperblockiocb"},"Members of SEFCloseSuperBlockIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Address of the super block")))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"struct-SEFNamelessCopyIOCB"},"SEFNamelessCopyIOCB"),(0,n.kt)("h4",{id:"members-of-sefnamelesscopyiocb"},"Members of SEFNamelessCopyIOCB"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Direction"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api03#struct-SEFCommonIOCB"},"struct SEFCommonIOCB")),(0,n.kt)("td",{parentName:"tr",align:null},"common"),(0,n.kt)("td",{parentName:"tr",align:null},"In/Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Common fields for all IOCBs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"SEFQoSHandle"),(0,n.kt)("td",{parentName:"tr",align:null},"dstQosHandle"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Handle to the destination QoS Domain")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFFlashAddress"},"struct SEFFlashAddress")),(0,n.kt)("td",{parentName:"tr",align:null},"copyDestination"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Flash address of destination super block")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"reserved","_","0"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Reserved, must be initialized to zero")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32","_","t"),(0,n.kt)("td",{parentName:"tr",align:null},"numAddressChangeRecords"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Maximum number of ADUs to copy (size of addressChangeRequest userAddress array)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFAddressChangeRequest"},"struct SEFAddressChangeRequest*")),(0,n.kt)("td",{parentName:"tr",align:null},"addressChangeInfo"),(0,n.kt)("td",{parentName:"tr",align:null},"Out"),(0,n.kt)("td",{parentName:"tr",align:null},"Output of changed addresses")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFCopySource"},"struct SEFCopySource")),(0,n.kt)("td",{parentName:"tr",align:null},"copySource"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Physical addresses to copy")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFUserAddressFilter"},"const struct SEFUserAddressFilter*")),(0,n.kt)("td",{parentName:"tr",align:null},"filter"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Pointer to user address filter parameters, null for no filtering")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/SEF-API/1.13/SEF_API/sef-api02#struct-SEFCopyOverrides"},"struct SEFCopyOverrides")),(0,n.kt)("td",{parentName:"tr",align:null},"overrides"),(0,n.kt)("td",{parentName:"tr",align:null},"In"),(0,n.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes. Must set kSefIoFlagOverride in flags to apply")))),(0,n.kt)("hr",null))}u.isMDXComponent=!0}}]);
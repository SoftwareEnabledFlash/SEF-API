"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[3356],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=c(t),f=a,m=l["".concat(p,".").concat(f)]||l[f]||d[f]||o;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2714:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:8},i="Super Pages",s={unversionedId:"super-pages",id:"version-1.10/super-pages",title:"Super Pages",description:"A Super Page is the optimal unit for physical read and write. It consists of the same hardware page",source:"@site/versioned_docs/version-1.10/super-pages.md",sourceDirName:".",slug:"/super-pages",permalink:"/SEF-API/1.10/super-pages",draft:!1,tags:[],version:"1.10",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"QoS Domains",permalink:"/SEF-API/1.10/qos-domains"},next:{title:"Super Blocks",permalink:"/SEF-API/1.10/super-blocks"}},p={},c=[],u={toc:c},l="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(l,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"super-pages"},"Super Pages"),(0,a.kt)("p",null,"A Super Page is the optimal unit for physical read and write. It consists of the same hardware page\nfrom each die in the virtual device. When data is read or written, the super page construct allows\nthe data to be striped across the dies to achieve the maximum performance by involving each die of\nthe virtual device in parallel."),(0,a.kt)("p",null,"Unlike a regular page, the size of a super page is not static but is defined by the geometry of the\nvirtual device. Super pages are read and written in integer multiples of ADUs. Super pages are\ngrouped into super blocks. The number of super pages contained in a super block is a static number\ndefined by the specific generation of flash memory die being used in the device."))}d.isMDXComponent=!0}}]);
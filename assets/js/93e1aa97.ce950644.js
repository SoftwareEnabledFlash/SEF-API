"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[4100],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return n?i.createElement(m,o(o({ref:t},p),{},{components:n})):i.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={slug:"/",sidebar_position:1},o="Introduction",s={unversionedId:"intro",id:"version-1.10/intro",title:"Introduction",description:"This specification describes the core components of the Software-Enabled Flash (SEF) application",source:"@site/versioned_docs/version-1.10/intro.md",sourceDirName:".",slug:"/",permalink:"/SEF-API/1.10/",draft:!1,tags:[],version:"1.10",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Definitions and Acronyms",permalink:"/SEF-API/1.10/definitions"}},l={},c=[{value:"Figure 2.1: SEF Library location in the system layer",id:"figure-21-sef-library-location-in-the-system-layer",level:4},{value:"Figure 2.2: SEF Block Diagram",id:"figure-22-sef-block-diagram",level:4}],p={toc:c},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,i.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"This specification describes the core components of the Software-Enabled Flash\u2122\ufe0f (SEF) application\nprogramming interface."),(0,r.kt)("p",null,"The SEF API provides a simplified interface which abstracts away details of low-level flash memory\ndevice mechanics in such a way that allows hosts to interact with flash memory as though they\nwere simple performance-optimized read/write devices. Hosts can make use of the SEF API to\nimplement a custom Flash Translation Layer (FTL) or build SEF native applications bypassing all\nfile systems in accordance with their application-specific requirements.\nThe SEF API interfaces with SEF hardware Units. SEF Units are PCIe\xae\ufe0f based NVMe\u2122\ufe0f devices,\nwith certain SEF specific extensions to the NVMe command set. These extensions are separately\ndefined as the SEF Command Set."),(0,r.kt)("p",null,"The SEF API addresses the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Maintaining interface compatibility across flash memory generations"),(0,r.kt)("li",{parentName:"ul"},"Allowing host control over data placement to enable application-specific optimizations"),(0,r.kt)("li",{parentName:"ul"},"Providing mechanisms to enforce hardware isolation to support multi-tenancy"),(0,r.kt)("li",{parentName:"ul"},"Providing mechanism to allow control over housekeeping functions to support predictable latency"),(0,r.kt)("li",{parentName:"ul"},"Offloading computational burden from hosts via powerful API primitives"),(0,r.kt)("li",{parentName:"ul"},"Extension of flash memory lifetime due to intelligent automatic resource allocation")),(0,r.kt)("p",null,"Figure 2.1 illustrates where the SEF library is located in the context of a traditional SSD-like\napplication stack. The SEF Library accepts I/O requests from a host-defined FTL, and issues a\nset of commands. The SEF Unit translates this down to an appropriate set of flash memory-level\noperations."),(0,r.kt)("h4",{id:"figure-21-sef-library-location-in-the-system-layer"},"Figure 2.1: SEF Library location in the system layer"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"SEF Library location in the system layer",src:n(6016).Z,width:"961",height:"415"})),(0,r.kt)("p",null,"Figure 2.2 provides a detailed view of the system interface provided by the SEF API. SEF handles\nfunctionality including super block allocation, identifying and working around defective blocks,\nlow-level flash memory I/O, scheduling, prioritization and other device-level concerns. The host\nlayer in turn is responsible for implementing its own data placement strategy (including devising an\nappropriate logical-to-physical address mapping) as well as coordinating housekeeping functions\nsuch as wear leveling, garbage collection, and responding to asynchronous event notifications."),(0,r.kt)("h4",{id:"figure-22-sef-block-diagram"},"Figure 2.2: SEF Block Diagram"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"SEF Block Diagram",src:n(4633).Z,width:"1096",height:"888"})))}u.isMDXComponent=!0},6016:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/component-diagram-3dfeb06a6ff8edad2759f3d80b02ae5b.png"},4633:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/sef-block-diagram-2f5ed8b5048edbefb3ad9123201de215.png"}}]);
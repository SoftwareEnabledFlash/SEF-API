"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[362],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=i,v=p["".concat(s,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(v,o(o({ref:t},u),{},{components:r})):n.createElement(v,o({ref:t},u))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5297:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:5},o="Virtual Devices",c={unversionedId:"virtual-devices",id:"virtual-devices",title:"Virtual Devices",description:"chap-VirtualDevice}",source:"@site/docs/virtual-devices.md",sourceDirName:".",slug:"/virtual-devices",permalink:"/SEF-API/virtual-devices",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"SEF Unit",permalink:"/SEF-API/sef-unit"},next:{title:"QoS Domains",permalink:"/SEF-API/qos-domains"}},s={},l=[{value:"Creation-time Parameters",id:"creation-time-parameters",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"chap-VirtualDevice"},"Virtual Devices"),(0,i.kt)("p",null,"A Virtual Device encompasses one or more flash memory dies, providing the user the ability to\nutilize the hardware isolation of separate dies. Dies are not shared across separate virtual devices.\nI/O operations on one Virtual Device will not compete for die time with other virtual devices.\nThere may be a minimal amount of latency caused by contention between virtual devices due to\nany internal controller bottlenecks or flash memory channel conflicts for virtual devices that share\nflash memory channels."),(0,i.kt)("p",null,"When virtual devices are created, several parameters are specified to define the\ncharacteristics of each virtual device. Virtual devices are created by using the\n",(0,i.kt)("a",{parentName:"p",href:"/SEF-API/SEF_API/sef-api00#function-SEFCreateVirtualDevices"},"SEFCreateVirtualDevices")," function. The size of each virtual\ndevice is user-configurable and dependent on the resources available. Each virtual device must be\ngiven a unique ID."),(0,i.kt)("p",null,"Because virtual devices represent hardware isolation, the SEF Unit will not wear level across the\ndies in different virtual devices. It is expected that virtual devices will be created when a SEF Unit\nis first set up and their geometry not subsequently altered."),(0,i.kt)("h2",{id:"creation-time-parameters"},"Creation-time Parameters"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"virtualDeviceID"),": an identifier that will later be used to specify the created virtual device. This\nidentifier must be unique across the entire SEF Unit. The maximum allowed ID is the number of\ndies in the SEF Unit."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"dieList"),": Lists the dies that will be owned by the created virtual device."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"superBlockSize"),": The number of dies that define a super block. It must evenly divide into the\nnumber of dies defined for the virtual device."),(0,i.kt)("p",null,"Once a virtual device is created it can be further configured with\n",(0,i.kt)("a",{parentName:"p",href:"/SEF-API/SEF_API/sef-api00#function-SEFSetVirtualDeviceSuspendConfig"},"SEFSetVirtualDeviceSuspendConfig")," and\n",(0,i.kt)("a",{parentName:"p",href:"/SEF-API/SEF_API/sef-api00#function-SEFSetNumberOfPSLCSuperBlocks"},"SEFSetNumberOfPSLCSuperBlocks"),"."))}d.isMDXComponent=!0}}]);
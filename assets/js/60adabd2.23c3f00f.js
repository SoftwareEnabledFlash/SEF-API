"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[1861],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>c});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),m=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=m(t.components);return n.createElement(o.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,p=d(t,["components","mdxType","originalType","parentName"]),u=m(a),k=r,c=u["".concat(o,".").concat(k)]||u[k]||s[k]||l;return a?n.createElement(c,i(i({ref:e},p),{},{components:a})):n.createElement(c,i({ref:e},p))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d[u]="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},8326:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={},i="Callback Structures",d={unversionedId:"SEF_API/sef-api03",id:"version-1.10/SEF_API/sef-api03",title:"Callback Structures",description:"SEFWriteWithoutPhysicalAddressIOCB",source:"@site/versioned_docs/version-1.10/SEF_API/sef-api03.md",sourceDirName:"SEF_API",slug:"/SEF_API/sef-api03",permalink:"/SEF-API/1.10/SEF_API/sef-api03",draft:!1,tags:[],version:"1.10",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Common Structures",permalink:"/SEF-API/1.10/SEF_API/sef-api02"},next:{title:"Events",permalink:"/SEF-API/1.10/SEF_API/sef-api04"}},o={},m=[{value:"SEFWriteWithoutPhysicalAddressIOCB",id:"struct-SEFWriteWithoutPhysicalAddressIOCB",level:2},{value:"Members of SEFWriteWithoutPhysicalAddressIOCB",id:"members-of-sefwritewithoutphysicaladdressiocb",level:4},{value:"SEFReadWithPhysicalAddressIOCB",id:"struct-SEFReadWithPhysicalAddressIOCB",level:2},{value:"Members of SEFReadWithPhysicalAddressIOCB",id:"members-of-sefreadwithphysicaladdressiocb",level:4},{value:"SEFReleaseSuperBlockIOCB",id:"struct-SEFReleaseSuperBlockIOCB",level:2},{value:"Members of SEFReleaseSuperBlockIOCB",id:"members-of-sefreleasesuperblockiocb",level:4},{value:"SEFAllocateSuperBlockIOCB",id:"struct-SEFAllocateSuperBlockIOCB",level:2},{value:"Members of SEFAllocateSuperBlockIOCB",id:"members-of-sefallocatesuperblockiocb",level:4},{value:"SEFCloseSuperBlockIOCB",id:"struct-SEFCloseSuperBlockIOCB",level:2},{value:"Members of SEFCloseSuperBlockIOCB",id:"members-of-sefclosesuperblockiocb",level:4},{value:"SEFNamelessCopyIOCB",id:"struct-SEFNamelessCopyIOCB",level:2},{value:"Members of SEFNamelessCopyIOCB",id:"members-of-sefnamelesscopyiocb",level:4}],p={toc:m},u="wrapper";function s(t){let{components:e,...a}=t;return(0,r.kt)(u,(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"callback-structures"},"Callback Structures"),(0,r.kt)("h2",{id:"struct-SEFWriteWithoutPhysicalAddressIOCB"},"SEFWriteWithoutPhysicalAddressIOCB"),(0,r.kt)("h4",{id:"members-of-sefwritewithoutphysicaladdressiocb"},"Members of SEFWriteWithoutPhysicalAddressIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFWriteWithoutPhysicalAddressIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress *"),(0,r.kt)("td",{parentName:"tr",align:null},"tentativeAddresses"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"List of tentative addresses return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct SEFWriteOverrides *"),(0,r.kt)("td",{parentName:"tr",align:null},"overrides"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes, may be NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the superblock for this write; -1 for auto-allocate, or can use value from previous superblock allocation call")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFUserAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"userAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Contains LBA information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct iovec *"),(0,r.kt)("td",{parentName:"tr",align:null},"iov"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"A pointer to the scatter gather list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"iovcnt"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"number of elements in the scatter gather list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFPlacementID"),(0,r.kt)("td",{parentName:"tr",align:null},"placementID"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Only valid if the flashAddress is auto allocated. A value from 0 to numPlacementIds \u2013 1 indicating what logical data group to place this data in")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"numADU"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Length in ADUs, maximum is 64k ADUs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"distanceToEndOfSuperBlock"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Return value in units of ADUs")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"struct-SEFReadWithPhysicalAddressIOCB"},"SEFReadWithPhysicalAddressIOCB"),(0,r.kt)("h4",{id:"members-of-sefreadwithphysicaladdressiocb"},"Members of SEFReadWithPhysicalAddressIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFReadWithPhysicalAddressIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct SEFReadOverrides *"),(0,r.kt)("td",{parentName:"tr",align:null},"overrides"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes, may be NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Physical address for the read command; When the QoS domain ID and block number are 0, the ADU offset is the root pointer index for the flash address to read.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFUserAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"userAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Contains LBA information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct iovec *"),(0,r.kt)("td",{parentName:"tr",align:null},"iov"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"A pointer to the scatter gather list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"iovOffset"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Starting byte offset into iov array")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"numADU"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of ADUs to be read, maximum is superblockCapacity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"iovcnt"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of elements in the scatter gather list")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"struct-SEFReleaseSuperBlockIOCB"},"SEFReleaseSuperBlockIOCB"),(0,r.kt)("h4",{id:"members-of-sefreleasesuperblockiocb"},"Members of SEFReleaseSuperBlockIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFReleaseSuperBlockIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"ALIGN","_","FOR","_","LONG"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of superblock")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"struct-SEFAllocateSuperBlockIOCB"},"SEFAllocateSuperBlockIOCB"),(0,r.kt)("p",null,"IOCB for SEFAllocateSuperBlockAsync()"),(0,r.kt)("h4",{id:"members-of-sefallocatesuperblockiocb"},"Members of SEFAllocateSuperBlockIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFAllocateSuperBlockIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct SEFAllocateOverrides *"),(0,r.kt)("td",{parentName:"tr",align:null},"overrides"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes, may be NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of superblock")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"retention"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Desired retention period in hours")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enum SEFSuperBlockType"),(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"kForWrite, kForCopy or kForDeviceMetadata")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"struct-SEFCloseSuperBlockIOCB"},"SEFCloseSuperBlockIOCB"),(0,r.kt)("p",null,"IOCB for SEFCloseSuperBlockAsync()"),(0,r.kt)("h4",{id:"members-of-sefclosesuperblockiocb"},"Members of SEFCloseSuperBlockIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFCloseSuperBlockIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"flashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the superblock")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"struct-SEFNamelessCopyIOCB"},"SEFNamelessCopyIOCB"),(0,r.kt)("h4",{id:"members-of-sefnamelesscopyiocb"},"Members of SEFNamelessCopyIOCB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFStatus"),(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Library sets error field to a non-zero value to indicate any error when a command completes. See SEFNamelessCopy() for details of the info field.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"opcode"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Should never be accessed - for internal use by library")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"done"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Flag for polled I/O - library sets this field to a non-zero value once the command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"param1"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignored by the library; the caller can store context information that may be accessed from the completion function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void(",(0,r.kt)("em",{parentName:"td"},")(struct SEFNamelessCopyIOCB "),")"),(0,r.kt)("td",{parentName:"tr",align:null},"complete","_","func"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"If non-zero, treated as the address of a function to be called when a command completes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SEFQoSHandle"),(0,r.kt)("td",{parentName:"tr",align:null},"dstQosHandle"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Handle to the destination QoS Domain")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFFlashAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"copyDestination"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Physical address of destination superblock")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFAddressChangeRequest *"),(0,r.kt)("td",{parentName:"tr",align:null},"addressChangeInfo"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Information to record changed addresses")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"numAddressChangeRecords"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of ADUs to copy (size of addressChangeRequest userAddress array)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"reserved","_","0"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"struct SEFCopySource"),(0,r.kt)("td",{parentName:"tr",align:null},"copySource"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Physical addresses to copy")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct SEFUserAddressFilter *"),(0,r.kt)("td",{parentName:"tr",align:null},"filter"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Pointer to user address filter parameters, null for no filtering")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const struct SEFCopyOverrides *"),(0,r.kt)("td",{parentName:"tr",align:null},"overrides"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Override parameters for scheduling purposes, may be NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void *"),(0,r.kt)("td",{parentName:"tr",align:null},"copyContext"),(0,r.kt)("td",{parentName:"tr",align:null},"In"),(0,r.kt)("td",{parentName:"tr",align:null},"Working buffer returned by SEFPrepareBufferForNamelessCopy()")))),(0,r.kt)("hr",null))}s.isMDXComponent=!0}}]);